<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on City of Wings</title>
    <link>https://city.shaform.com/en/posts/</link>
    <description>Recent content in Posts on City of Wings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Jul 2018 21:30:00 +0800</lastBuildDate>
    
	<atom:link href="https://city.shaform.com/en/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generate RSS Feed for All Languages in Hugo</title>
      <link>https://city.shaform.com/en/2018/07/16/generate-rss-feed-for-all-languages-in-hugo/</link>
      <pubDate>Mon, 16 Jul 2018 21:30:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2018/07/16/generate-rss-feed-for-all-languages-in-hugo/</guid>
      <description>Hugo supports multilingual natively, and it generates RSS feeds for all</description>
    </item>
    
    <item>
      <title>Install TensorFlow and Caffe on Ubuntu 16.04 with Anaconda</title>
      <link>https://city.shaform.com/en/2017/10/23/install-tensorflow-and-caffe-on-ubuntu/</link>
      <pubDate>Mon, 23 Oct 2017 21:30:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2017/10/23/install-tensorflow-and-caffe-on-ubuntu/</guid>
      <description>Previously I have written about 在Ubuntu 安裝 TensorFlow 的紀錄 (Installing TensorFlow on Ubuntu). Years have passed, and even though Ubuntu is still on 16.04，TensorFlow has already made great progress. I&amp;rsquo;ve decided to write another post to show how to install TensorFlow and Caffe with Anaconda. GPU</description>
    </item>
    
    <item>
      <title>snappycat: A command line tool to decompress snappy files produced by Hadoop</title>
      <link>https://city.shaform.com/en/2015/11/06/snappycat/</link>
      <pubDate>Fri, 06 Nov 2015 21:20:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2015/11/06/snappycat/</guid>
      <description>I often encounter Snappy-compressed files recently when I am learning Spark. Although we could just use sc.textFile to read them in Spark, sometimes we might want to download them locally for processing. However, reading these files locally is complicated because the file format is not exactly Snappy-compressed files, as Hadoop stores those files in its own way.
Most of existing solutions use Java to link with Hadoop library, but the setup is rather complicated.</description>
    </item>
    
    <item>
      <title>Using Caffe for Sentiment Analysis</title>
      <link>https://city.shaform.com/en/2015/06/06/caffe-sentiment-analysis/</link>
      <pubDate>Sat, 06 Jun 2015 11:05:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2015/06/06/caffe-sentiment-analysis/</guid>
      <description>Caffe is a deep learning framework that can be used to develop neural network models. Although Caffe is usually used for image classification, it does not prevent us from utilizing it for other tasks. In this article, we outline the procedure to convert Paragraph Vectors into the LMDB format that Caffe understands, and create a simple model to train and predict the sentiment for movie reviews.
Data Preparation While in the previous post we use custom Chinese corpus for sentiment analysis, this time we utilize the scripts provided by mesnilgr/iclr15 to download the Large Movie Review Dataset so it&amp;rsquo;s easier to reproduce the results.</description>
    </item>
    
    <item>
      <title>Dine together - Payment System</title>
      <link>https://city.shaform.com/en/2015/04/20/dine-together-payment-system/</link>
      <pubDate>Mon, 20 Apr 2015 08:34:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2015/04/20/dine-together-payment-system/</guid>
      <description>I seldom went out for dinner due to the location of school and the lack of money when I was in NCTU. But since I have came to Taipei, I started to have opportunities to dine together with others. Once I went with a lot of people, when it comes to paying, everyone put her money on the table. But the person who collected the money and payed for us later found out the money was not enough.</description>
    </item>
    
    <item>
      <title>Google Inbox-like Web Browsing</title>
      <link>https://city.shaform.com/en/2014/11/07/google-inbox-like-web-browsing/</link>
      <pubDate>Fri, 07 Nov 2014 18:52:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2014/11/07/google-inbox-like-web-browsing/</guid>
      <description>Last time, I explored the idea of designing a web browsing UI that reduces the possibility of distractions in 〈Single-minded : an Internet reader, made for readers, made by readers〉. While that idea might sound interesting, the design itself was somewhat primitive. Recently, Google has announced Inbox, a new way to handle email. And I find that many ideas behind Inbox are also applicable to web browsing as well.</description>
    </item>
    
    <item>
      <title>Single-minded : an Internet reader, made for readers, made by readers</title>
      <link>https://city.shaform.com/en/2013/10/20/single-minded/</link>
      <pubDate>Sun, 20 Oct 2013 20:25:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2013/10/20/single-minded/</guid>
      <description>Realization I&amp;rsquo;ve known it for a long time that it’s difficult for me to read long articles on the web. I thought it’s because of the screen. It made my eyes get tired so easily. However, when I started to read The Shallows written by Nicholas Carr, I realized that it’s not only the screen. The Internet itself is distracting.
I started to remember that, I often clicked between different tabs aimlessly.</description>
    </item>
    
    <item>
      <title>Notes about Migrating from Qwerty to Dvorak</title>
      <link>https://city.shaform.com/en/2013/07/12/qwerty-to-dvorak/</link>
      <pubDate>Fri, 12 Jul 2013 18:53:00 +0800</pubDate>
      
      <guid>https://city.shaform.com/en/2013/07/12/qwerty-to-dvorak/</guid>
      <description>Windows Newer versions of Windows could use different keyboard layouts for the login screen. Just choose it when installing or add the relevant input method in language settings.
Linux Newer versions of Linux distributions also support dvorak layout when installing.
If you want to set the layout temporarily, you could also use the following commands:
setxkbmap dvorak # change to dvorak setxkbmap us # change back to qwerty Xrdp If you are using rdp to connect to remote linux servers, the keyboard layout is controlled by a separate configuration file.</description>
    </item>
    
  </channel>
</rss>